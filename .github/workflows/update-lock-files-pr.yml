# Workflow to update lock files in a PR, triggered by specific PR comments
name: Update lock files in PR
on:
  issue_comment:
    types: [created]

jobs:
  update-lock-files:
    if: >-
      github.repository == 'scikit-learn/scikit-learn'
      && github.event.issue.pull_request
      && startsWith(github.event.comment.body, '@scikit-learn-bot update lock-files')
    runs-on: ubuntu-latest

    steps:
      - name: Parse the comment
        id: parse-comment
        env:
          # Avoid potential code injection
          COMMENT: ${{ github.event.comment.body }}
        run: |
          prefix="@scikit-learn-bot update lock-files"
          first_line=$(echo "$COMMENT" | head -n 1)
          args=""
          if [[ "$first_line" == "$prefix"* ]]; then  # always true
            args="${first_line#$prefix}"
          fi
          echo "args=$args" >> $GITHUB_OUTPUT

      # There is no direct way to get the HEAD information directly from issue_comment
      # event, so we use the GitHub CLI to get the PR head ref and repository
      - name: Get pull request HEAD information
        id: pr-head-info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_info=$(gh pr view ${{ github.event.issue.number }} --repo ${{ github.repository }} --json headRefName,headRepository,headRepositoryOwner)
          pr_head_ref=$(echo "$pr_info" | jq -r '.headRefName')
          pr_head_repository=$(echo "$pr_info" | jq -r '.headRepositoryOwner.login + "/" + .headRepository.name')
          echo "pr_head_ref=$pr_head_ref" >> $GITHUB_OUTPUT
          echo "pr_head_repository=$pr_head_repository" >> $GITHUB_OUTPUT

      - name: Check out the PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr-head-info.outputs.pr_head_ref }}
          repository: ${{ steps.pr-head-info.outputs.pr_head_repository }}

      - name: Update lock files
        run: |
          source build_tools/shared.sh
          source $CONDA/bin/activate
          conda install -n base conda conda-libmamba-solver -y
          conda config --set solver libmamba
          conda install -c conda-forge "$(get_dep conda-lock min)" -y

          python build_tools/update_environments_and_lock_files.py${{ steps.parse-comment.outputs.args }}

      - name: Commit changes
        run: |
          args="${{ steps.parse-comment.outputs.args }}"
          selected_tag=""
          if [[ $args == *"--select-tag "* ]]; then
            selected_tag=${args#*--select-tag }
            selected_tag=${selected_tag%% *}
          fi

          # Get marker from selected tag (if any)
          marker=""
          case "$selected_tag" in
            "main-ci")
              marker="[doc build] "
              ;;
            "scipy-dev")
              marker="[scipy-dev] "
              ;;
            "arm")
              marker="[cirrus arm] "
              ;;
            *)
              ;;
          esac

          git config --global user.name "scikit-learn-bot"
          git config --global user.email "tjpfdev@gmail.com"
          git add -A
          git commit -m "${marker}Update lock files"
          git push
